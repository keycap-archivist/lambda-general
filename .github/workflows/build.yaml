name: CI

on:
  push:
    branches:
      - main
  pull-request:

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - id: nodeversion
        run: echo ::set-output name=NODE::$(cat .nvmrc)
      - name: restore Cache
        uses: actions/cache@master
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Use Node.js ${{steps.nodeversion.outputs.NODE}}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.nodeversion.outputs.NODE }}
      - name: install
        run: yarn
      - name: lint
        run: yarn lint
      - name: test
          cp .env.test .env
          pushd .
          cd dev/docker-stack && docker-compose up -d
          popd
          yarn test
      - name: build
        run: |
          yarn build
          cp package.json dist/package.json
          echo "${{ github.sha }}" > dist/revision.txt
          cd dist
          yarn --production
      - name: zip
        run: |
         cd dist &&  zip -r ../package.zip *
      - name: Configure AWS credentials
        if: github.ref == 'refs/heads/main'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Send to S3
        if: github.ref == 'refs/heads/main'
        run: |
          aws s3 cp ./package.zip s3://lambda-builds.keycap-archivist.com/ka-general-build.zip \
            --storage-class REDUCED_REDUNDANCY \
            --acl private \
            --no-progress
      - name: Deploy Lambda function
        if: github.ref == 'refs/heads/main'
        run: |
          aws lambda update-function-code \
            --function-name ka_general \
            --s3-bucket lambda-builds.keycap-archivist.com \
            --s3-key ka-general-build.zip \
            --publish
